/* 
 * AIcrowd Evaluations API
 *
 * API to create and evaluate custom challenges on AIcrowd!
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.AIcrowd.Evaluations.Api;
using Com.AIcrowd.Evaluations.Model;
using Com.AIcrowd.Evaluations.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.AIcrowd.Evaluations.Test
{
    /// <summary>
    ///  Class for testing Cluster
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ClusterTests
    {
        // TODO uncomment below to declare an instance variable for Cluster
        //private Cluster instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Cluster
            //instance = new Cluster();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Cluster
        /// </summary>
        [Test]
        public void ClusterInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Cluster
            //Assert.IsInstanceOfType<Cluster> (instance, "variable 'instance' is a Cluster");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Test]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'Updated'
        /// </summary>
        [Test]
        public void UpdatedTest()
        {
            // TODO unit test for the property 'Updated'
        }
        /// <summary>
        /// Test the property 'RemoteAddress'
        /// </summary>
        [Test]
        public void RemoteAddressTest()
        {
            // TODO unit test for the property 'RemoteAddress'
        }
        /// <summary>
        /// Test the property 'AuthToken'
        /// </summary>
        [Test]
        public void AuthTokenTest()
        {
            // TODO unit test for the property 'AuthToken'
        }
        /// <summary>
        /// Test the property 'DockerUsername'
        /// </summary>
        [Test]
        public void DockerUsernameTest()
        {
            // TODO unit test for the property 'DockerUsername'
        }
        /// <summary>
        /// Test the property 'DockerRegistry'
        /// </summary>
        [Test]
        public void DockerRegistryTest()
        {
            // TODO unit test for the property 'DockerRegistry'
        }
        /// <summary>
        /// Test the property 'Namespace'
        /// </summary>
        [Test]
        public void NamespaceTest()
        {
            // TODO unit test for the property 'Namespace'
        }
        /// <summary>
        /// Test the property 'StorageClass'
        /// </summary>
        [Test]
        public void StorageClassTest()
        {
            // TODO unit test for the property 'StorageClass'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Test]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'WfName'
        /// </summary>
        [Test]
        public void WfNameTest()
        {
            // TODO unit test for the property 'WfName'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Test]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'OrganisationId'
        /// </summary>
        [Test]
        public void OrganisationIdTest()
        {
            // TODO unit test for the property 'OrganisationId'
        }

    }

}
