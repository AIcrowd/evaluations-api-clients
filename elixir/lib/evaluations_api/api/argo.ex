# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule EvaluationsAPI.Api.Argo do
  @moduledoc """
  API calls for all endpoints tagged `Argo`.
  """

  alias EvaluationsAPI.Connection
  import EvaluationsAPI.RequestBuilder


  @doc """
  Update the status of an object

  ## Parameters

  - connection (EvaluationsAPI.Connection): Connection to server
  - model_name (String.t): 
  - object_id (integer()): 
  - payload (GenericFeedback): 
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec post_generic_feedback_contract(Tesla.Env.client, String.t, integer(), EvaluationsAPI.Model.GenericFeedback.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def post_generic_feedback_contract(connection, model_name, object_id, payload, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/argo/#{model_name}/#{object_id}")
    |> add_param(:body, :"payload", payload)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Update the grader details

  ## Parameters

  - connection (EvaluationsAPI.Connection): Connection to server
  - grader_id (integer()): 
  - payload (GraderFeedback): 
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec post_grader_feedback_dao(Tesla.Env.client, integer(), EvaluationsAPI.Model.GraderFeedback.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def post_grader_feedback_dao(connection, grader_id, payload, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/argo/graders/#{grader_id}")
    |> add_param(:body, :"payload", payload)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Update the submission details

  ## Parameters

  - connection (EvaluationsAPI.Connection): Connection to server
  - submission_id (integer()): 
  - payload (SubmissionFeedback): 
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec post_submission_feedback_dao(Tesla.Env.client, integer(), EvaluationsAPI.Model.SubmissionFeedback.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def post_submission_feedback_dao(connection, submission_id, payload, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/argo/submissions/#{submission_id}")
    |> add_param(:body, :"payload", payload)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end
end
