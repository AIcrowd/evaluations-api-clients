/*
 * Evaluations API
 * API to create and evaluate custom challenges
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Cluster', 'model/GenericFeedback', 'model/Grader', 'model/GraderFeedback', 'model/Login', 'model/Organisation', 'model/OrganisationQuota', 'model/SubmissionFeedback', 'model/Submissions', 'model/User', 'model/UserQuota', 'api/ArgoApi', 'api/AuthApi', 'api/ClustersApi', 'api/GradersApi', 'api/OrganisationsApi', 'api/SubmissionsApi', 'api/UsersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Cluster'), require('./model/GenericFeedback'), require('./model/Grader'), require('./model/GraderFeedback'), require('./model/Login'), require('./model/Organisation'), require('./model/OrganisationQuota'), require('./model/SubmissionFeedback'), require('./model/Submissions'), require('./model/User'), require('./model/UserQuota'), require('./api/ArgoApi'), require('./api/AuthApi'), require('./api/ClustersApi'), require('./api/GradersApi'), require('./api/OrganisationsApi'), require('./api/SubmissionsApi'), require('./api/UsersApi'));
  }
}(function(ApiClient, Cluster, GenericFeedback, Grader, GraderFeedback, Login, Organisation, OrganisationQuota, SubmissionFeedback, Submissions, User, UserQuota, ArgoApi, AuthApi, ClustersApi, GradersApi, OrganisationsApi, SubmissionsApi, UsersApi) {
  'use strict';

  /**
   * API_to_create_and_evaluate_custom_challenges.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var EvaluationsApi = require('index'); // See note below*.
   * var xxxSvc = new EvaluationsApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new EvaluationsApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new EvaluationsApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new EvaluationsApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Cluster model constructor.
     * @property {module:model/Cluster}
     */
    Cluster: Cluster,
    /**
     * The GenericFeedback model constructor.
     * @property {module:model/GenericFeedback}
     */
    GenericFeedback: GenericFeedback,
    /**
     * The Grader model constructor.
     * @property {module:model/Grader}
     */
    Grader: Grader,
    /**
     * The GraderFeedback model constructor.
     * @property {module:model/GraderFeedback}
     */
    GraderFeedback: GraderFeedback,
    /**
     * The Login model constructor.
     * @property {module:model/Login}
     */
    Login: Login,
    /**
     * The Organisation model constructor.
     * @property {module:model/Organisation}
     */
    Organisation: Organisation,
    /**
     * The OrganisationQuota model constructor.
     * @property {module:model/OrganisationQuota}
     */
    OrganisationQuota: OrganisationQuota,
    /**
     * The SubmissionFeedback model constructor.
     * @property {module:model/SubmissionFeedback}
     */
    SubmissionFeedback: SubmissionFeedback,
    /**
     * The Submissions model constructor.
     * @property {module:model/Submissions}
     */
    Submissions: Submissions,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserQuota model constructor.
     * @property {module:model/UserQuota}
     */
    UserQuota: UserQuota,
    /**
     * The ArgoApi service constructor.
     * @property {module:api/ArgoApi}
     */
    ArgoApi: ArgoApi,
    /**
     * The AuthApi service constructor.
     * @property {module:api/AuthApi}
     */
    AuthApi: AuthApi,
    /**
     * The ClustersApi service constructor.
     * @property {module:api/ClustersApi}
     */
    ClustersApi: ClustersApi,
    /**
     * The GradersApi service constructor.
     * @property {module:api/GradersApi}
     */
    GradersApi: GradersApi,
    /**
     * The OrganisationsApi service constructor.
     * @property {module:api/OrganisationsApi}
     */
    OrganisationsApi: OrganisationsApi,
    /**
     * The SubmissionsApi service constructor.
     * @property {module:api/SubmissionsApi}
     */
    SubmissionsApi: SubmissionsApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi
  };

  return exports;
}));
