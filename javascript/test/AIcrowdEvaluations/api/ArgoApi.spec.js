/*
 * Evaluations API
 * API to create and evaluate custom challenges
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/AIcrowdEvaluations/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/AIcrowdEvaluations/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AicrowdEvaluations);
  }
}(this, function(expect, AicrowdEvaluations) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AicrowdEvaluations.ArgoApi();
  });

  describe('AIcrowdEvaluations', function() {
    describe('ArgoApi', function() {
      describe('postGenericFeedbackContract', function() {
        it('should call postGenericFeedbackContract successfully', function(done) {
          // TODO: uncomment, update parameter values for postGenericFeedbackContract call
          /*
          var modelName = "modelName_example";
          var objectId = 56;
          var payload = new AicrowdEvaluations.GenericFeedback();
          payload.status = false;
          payload.meta = ;

          instance.postGenericFeedbackContract(modelName, objectId, payload, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postGraderFeedbackDao', function() {
        it('should call postGraderFeedbackDao successfully', function(done) {
          // TODO: uncomment, update parameter values for postGraderFeedbackDao call
          /*
          var graderId = 56;
          var payload = new AicrowdEvaluations.GraderFeedback();
          payload.status = false;
          payload.workflowSpec = "";

          instance.postGraderFeedbackDao(graderId, payload, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('postSubmissionFeedbackDao', function() {
        it('should call postSubmissionFeedbackDao successfully', function(done) {
          // TODO: uncomment, update parameter values for postSubmissionFeedbackDao call
          /*
          var submissionId = 56;
          var payload = new AicrowdEvaluations.SubmissionFeedback();
          payload.status = "";
          payload.outputs = "";
          payload.score = ;
          payload.logs = "";

          instance.postSubmissionFeedbackDao(submissionId, payload, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
