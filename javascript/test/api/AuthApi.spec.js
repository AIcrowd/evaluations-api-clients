/*
 * Evaluations API
 * API to create and evaluate custom challenges
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EvaluationsApi);
  }
}(this, function(expect, EvaluationsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EvaluationsApi.AuthApi();
  });

  describe('(package)', function() {
    describe('AuthApi', function() {
      describe('logoutAUser', function() {
        it('should call logoutAUser successfully', function(done) {
          // TODO: uncomment, update parameter values for logoutAUser call and complete the assertions
          /*
          var opts = {};
          opts.xFields = "xFields_example";

          instance.logoutAUser(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EvaluationsApi.AuthLogout);
            expect(data.message).to.be.a('string');
            expect(data.message).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('userLogin', function() {
        it('should call userLogin successfully', function(done) {
          // TODO: uncomment, update parameter values for userLogin call and complete the assertions
          /*
          var payload = new EvaluationsApi.Login();
          payload.email = "";
          payload.password = "";
          var opts = {};
          opts.xFields = "xFields_example";

          instance.userLogin(payload, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EvaluationsApi.AuthResponse);
            expect(data.authorization).to.be.a('string');
            expect(data.authorization).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
