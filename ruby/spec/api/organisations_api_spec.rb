=begin
#Evaluations API

#API to create and evaluate custom challenges

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13

=end

require 'spec_helper'
require 'json'

# Unit tests for AIcrowdEvaluations::OrganisationsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'OrganisationsApi' do
  before do
    # run before each test
    @instance = AIcrowdEvaluations::OrganisationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrganisationsApi' do
    it 'should create an instance of OrganisationsApi' do
      expect(@instance).to be_instance_of(AIcrowdEvaluations::OrganisationsApi)
    end
  end

  # unit tests for delete_organisation_dao
  # Delete an Organisation
  # @param organisation_id Organisation identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_organisation_dao test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organisation_dao
  # Get information of an organisation
  # @param organisation_id Organisation identifier
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_fields An optional fields mask
  # @return [Organisation]
  describe 'get_organisation_dao test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organisation_list_dao
  # Get all organisations
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_fields An optional fields mask
  # @return [Array<Organisation>]
  describe 'get_organisation_list_dao test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_organisation_list_dao
  # Create a new organisation
  # @param payload 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_fields An optional fields mask
  # @return [Organisation]
  describe 'post_organisation_list_dao test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_organisation_dao
  # Update an Organisation
  # @param organisation_id Organisation identifier
  # @param payload 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_fields An optional fields mask
  # @return [Organisation]
  describe 'put_organisation_dao test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for put_quota_dao
  # Add or subtract quota for an organisation
  # @param organisation_id Organisation identifier
  # @param payload 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'put_quota_dao test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
