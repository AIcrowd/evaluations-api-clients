/* 
 * Evaluations API
 *
 * API to create and evaluate custom challenges
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GraderFeedback {
  /// Status of the grader
  #[serde(rename = "status")]
  status: bool,
  /// Serialized YAML workflow spec
  #[serde(rename = "workflow_spec")]
  workflow_spec: String
}

impl GraderFeedback {
  pub fn new(status: bool, workflow_spec: String) -> GraderFeedback {
    GraderFeedback {
      status: status,
      workflow_spec: workflow_spec
    }
  }

  pub fn set_status(&mut self, status: bool) {
    self.status = status;
  }

  pub fn with_status(mut self, status: bool) -> GraderFeedback {
    self.status = status;
    self
  }

  pub fn status(&self) -> &bool {
    &self.status
  }


  pub fn set_workflow_spec(&mut self, workflow_spec: String) {
    self.workflow_spec = workflow_spec;
  }

  pub fn with_workflow_spec(mut self, workflow_spec: String) -> GraderFeedback {
    self.workflow_spec = workflow_spec;
    self
  }

  pub fn workflow_spec(&self) -> &String {
    &self.workflow_spec
  }


}



