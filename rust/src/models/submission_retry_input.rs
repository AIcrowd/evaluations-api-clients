/* 
 * AIcrowd Evaluations API
 *
 * API to create and evaluate custom challenges on AIcrowd!
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SubmissionRetryInput {
  /// List of submission IDs to retry
  #[serde(rename = "submissions")]
  submissions: Option<Vec<i32>>
}

impl SubmissionRetryInput {
  pub fn new() -> SubmissionRetryInput {
    SubmissionRetryInput {
      submissions: None
    }
  }

  pub fn set_submissions(&mut self, submissions: Vec<i32>) {
    self.submissions = Some(submissions);
  }

  pub fn with_submissions(mut self, submissions: Vec<i32>) -> SubmissionRetryInput {
    self.submissions = Some(submissions);
    self
  }

  pub fn submissions(&self) -> Option<&Vec<i32>> {
    self.submissions.as_ref()
  }

  pub fn reset_submissions(&mut self) {
    self.submissions = None;
  }

}



